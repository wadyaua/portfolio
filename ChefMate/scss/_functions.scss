//* -- convert -------------

//Percent
@function percent($px, $from: 100) {
	$result: math.div($px, $from) * 100%;
	@return $result;
}
//REM
@function toRem($px, $current: 16) {
	$result: math.div($px, $current) + rem;
	@return $result;
}
//EM
@function toEm($px, $current: 16) {
	$result: math.div($px, $current) + em;
	@return $result;
}

//? toRemValues
// Конвертує список значень у rem, якщо вони вказані в px або без одиниць.

// Використовується для властивостей:
// - `padding`, `margin`, `border-width` та інших, які приймають 2-4 значення.

// @function toRemValues
// @param {List} $values - Список значень для конвертації (від 2 до 4 значень).
// @param {Number} $current - Поточний розмір базового шрифту (за замовчуванням 16px).
// @return {List} - Список значень, де px та безодиничні значення конвертовані в rem.

// Особливості:
// - Якщо значення без одиниць, сприймається як px і конвертується в rem.
// - Якщо значення в px, також конвертується в rem.
// - Інші одиниці (наприклад, em, %, vw тощо) залишаються без змін.
// - Якщо базовий шрифт не 16px, його можна змінити, додавши інше значення після списку значень.
// 		Наприклад: `toRemValues(10px 20px, 18);` — конвертує відносно 18px, а не 16px.
@function toRemValues($values, $current: 16) {
	$rem-values: ();

	@each $value in $values {
		// Якщо значення без одиниць, сприймається як px і конвертується в rem
		@if (unitless($value)) {
			$rem-values: append($rem-values, math.div($value, $current) + rem, space);
		}
		// Якщо значення в px, видаляємо px і конвертуємо в rem
		@else if (unit($value) == "px") {
			$rem-values: append($rem-values, math.div($value / 1px, $current) + rem, space);
		}
		// Для інших одиниць залишаємо значення без змін
		@else {
			$rem-values: append($rem-values, $value, space);
		}
	}

	@return $rem-values;
}
